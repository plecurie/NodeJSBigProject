image: node:latest

stages:
  - build
  - test
  - deploy

cache:
  paths:
    - node_modules/

build:
  stage: build
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - dist/
      - node_modules

test:
  stage: test
  script:
    - npm run test
  needs:
    - job: build
      artifacts: true

deploy:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
    - 'which sshpass || ( apt-get update -y -qq && apt-get install sshpass -y -qq)'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - sshpass -V
    - export SSHPASS=$SSH_PASS
    - sshpass -e ssh -p22 root@vps808693.ovh.net "netstat -tplan | grep :9200 || (sysctl -w vm.max_map_count=262144 && docker rm elassandra && docker run --name elassandra -p 127.0.0.1:9200:9200/tcp -d strapdata/elassandra:latest)"
    - sshpass -e ssh -p22 root@vps808693.ovh.net "cd /home/scala/htdocs/api/ && rm -rf /home/scala/htdocs/api/scala-api/ && git clone git@gitlab.com:scala1/scala-api.git"
    - sshpass -e ssh -p22 root@vps808693.ovh.net "cd /home/scala/htdocs/api/scala-api && npm install && npm run build"
  needs:
    - job: build
    - job: test
      artifacts: false
  only:
    - master