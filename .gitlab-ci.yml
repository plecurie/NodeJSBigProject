stages:
  - check
  - test
  - build
  - staging
  - release
  - production

variables:
  STAGING_IMAGE: registry.gitlab.com/scala1/scala-api:latest
  PRODUCTION_IMAGE: $CI_REGISTRY_PRODUCTION:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

compile:
  stage: check
  image: node:alpine
  script:
    - npm install --silent
    - npm run build
  artifacts:
    paths:
      - dist/

unittest:
  stage: test
  image: node:alpine
  needs:
    - job: compile
      artifacts: true
  script:
    - npm run test

dockerize:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  needs:
    - job: compile
      artifacts: true
    - job: unittest
  before_script:
    - echo -n $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker build --pull -t $STAGING_IMAGE .
    - docker push $STAGING_IMAGE
  only:
    - master

deploy_staging:
  stage: staging
  image: docker:dind
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  needs:
    - job: compile
      artifacts: true
    - job: dockerize
  before_script:
    - 'which ssh-agent || ( apk add openssh-client )'
    - 'which sshpass || ( apk add sshpass )'
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $H_STAGING >> ~/.ssh/known_hosts
  script:
    - sshpass -V
    - export SSHPASS=$SSH_PASS
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}"
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose down" || true
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose pull nodejs" || true
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose up -d" || true
    - rm -f ~/.ssh/id_rsa
    - 'echo Staging done: $(date “+%F %H:%M:%S”)'
  environment:
    name: Staging
    url: http://$H_STAGING:3100
  only:
    - master

#test_staging

release_image:
  stage: release
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull $STAGING_IMAGE
    - docker tag $STAGING_IMAGE $PRODUCTION_IMAGE
    - docker logout
    - docker login $CI_PROD_REGISTRY -u $CI_PROD_REGISTRY_USER -p $CI_PROD_REGISTRY_PASSWORD
    - docker push $PRODUCTION_IMAGE
  needs:
    - deploy_staging
  allow_failure: false
  when: manual
  only:
    - master

#release_source

deploy_production:
  stage: production
  image: docker:dind
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay
  environment:
    name: Production
    url: https://gitlab.scala-patrimoine.fr:3100
  before_script:
    - 'which ssh-agent || ( apk add openssh-client )'
    - 'which sshpass || ( apk add sshpass )'
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)"
    - ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H $H_PROD >> ~/.ssh/known_hosts
  script:
    - sshpass -V
    - export SSHPASS=$SSH_PASS
    - sshpass -e ssh gitlab-runner@$H_PROD "docker login ${CI_PROD_REGISTRY} -u ${CI_PROD_REGISTRY_USER} -p ${CI_PROD_REGISTRY_PASSWORD}"
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose down" || true
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose pull nodejs" || true
    - sshpass -e ssh $U_STAGING@$H_STAGING "docker-compose up -d" || true
    - rm -f ~/.ssh/id_rsa
    - 'echo Deploy done: $(date “+%F %H:%M:%S”)'
  needs:
    - job: release_image
  only:
    - master