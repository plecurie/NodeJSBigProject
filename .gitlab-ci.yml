stages:
  - test
  - build
  - review
#  - release
  - deploy

variables:
  BUILD_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_SLUG
  RELEASE_IMAGE: scala-api_app:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

test:
  stage: test
  image: node:alpine
  script:
    - npm install
    - npm run build
    - npm run test

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker logout
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  script:
    - apk add --update libffi-dev openssl-dev python-dev gcc g++ make python py-pip && pip install cffi docker-compose
    - docker-compose build
    - docker tag scala-api_app:latest $BUILD_IMAGE
    - docker push $BUILD_IMAGE
  artifacts:
    paths:
      - dist/

deploy_staging:
  stage: review
  image: ubuntu
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.scala-patrimoine.fr >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker pull $RELEASE_IMAGE"
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker run $RELEASE_IMAGE -d"
  needs:
    - job: build
  only:
    - dev

#release:
#  stage: release
#  image: docker:19.03.8
#  script:
#    - docker pull $TEST_IMAGE
#    - docker tag $TEST_IMAGE $RELEASE_IMAGE
#    - docker push $RELEASE_IMAGE
#  when: manual
#  only:
#    - master

deploy_production:
  stage: deploy
  image: ubuntu
  before_script:
    - apk add openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan gitlab.scala-patrimoine.fr >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker pull $RELEASE_IMAGE"
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker run $RELEASE_IMAGE -d"
#  needs:
#    - job: release
  only:
    - master