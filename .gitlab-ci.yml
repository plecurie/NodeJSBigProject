stages:
#  - test
#  - build
  - review
  - release
  - deploy

variables:
  BUILD_IMAGE: $CI_REGISTRY_IMAGE:master
  RELEASE_IMAGE: $CI_REGISTRY_IMAGE:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

#test:
#  stage: test
#  image: node:alpine
#  script:
#    - npm install
#    - npm run build
#    - npm run test
#
#build:
#  stage: build
#  image: docker:latest
#  services:
#    - docker:dind
#  before_script:
#    - docker logout
#    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
#  script:
#    - apk add --update libffi-dev openssl-dev python-dev gcc g++ make python py-pip && pip install cffi docker-compose
#    - docker-compose build
#    - docker tag scala-api_app:latest $BUILD_IMAGE
#    - docker push $BUILD_IMAGE
#  artifacts:
#    paths:
#      - dist/

deploy_staging:
  stage: review
  image: node:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
    - 'which sshpass || ( apt-get update -y -qq && apt-get install sshpass -y -qq)'
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - ssh-add <(echo "$SSH_STAGING_KEY")
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - sshpass -V
    - export SSHPASS=$SSH_PASS
    - sshpass -e ssh -p22 -i ~/.ssh/id_rsa gitlab_runner@gitlab.scala-patrimoine.fr
    - sshpass -e ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker pull $RELEASE_IMAGE"
    - sshpass -e ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker run $RELEASE_IMAGE -d"
    - rm -f ~/.ssh/id_rsa
#  needs:
#    - job: build
  only:
    - master
    - dev

release:
  stage: release
  image: docker:19.03.8
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  when: manual
  only:
    - master

deploy_production:
  stage: deploy
  image: jimmyadaro/gitlab-ci-cd:latest
  before_script:
    - 'which ssh-agent || ( apt-get  update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa gitlab_runner@gitlab.scala-patrimoine.fr
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker pull $RELEASE_IMAGE"
    - ssh -p22 gitlab_runner@gitlab.scala-patrimoine.fr "docker run $RELEASE_IMAGE -d"
    - rm -f ~/.ssh/id_rsa
    - 'echo Deploy done: $(date “+%F %H:%M:%S”)'
  needs:
    - job: release
  only:
    - master