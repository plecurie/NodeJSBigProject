services:
  - name: docker:19.03.8-dind
    alias: docker

stages:
  - build
  - dockerize
  - test
  - release

variables:
  TEST_IMAGE: gitlab.scala-patrimoine.fr:5555/scala-api1/api:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: gitlab.scala-patrimoine.fr:5555/scala-api1/api:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

before_script:
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD gitlab.scala-patrimoine.fr:5555

build:
  stage: build
  image: node:latest
  before_script:
    - npm install
  script:
    - npm run build
  artifacts:
    paths:
      - dist/

dockerize:
  stage: dockerize
  image: docker:19.03.8
  script:
    - docker-compose build -t $TEST_IMAGE .
    - docker push $TEST_IMAGE
  needs:
    - job: build
      artifacts: true

test:
  stage: test
  image: docker:19.03.8
  script:
    - docker pull $TEST_IMAGE
    - docker run $TEST_IMAGE npm install
    - docker run $TEST_IMAGE npm run build
    - docker run $TEST_IMAGE npm test

release:
  stage: release
  image: docker:19.03.8
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - master

#deploy_ssh:
#  stage: deploy
#  image: node:latest
#  only:
#    - master
#  when: manual
#  allow_failure: false
#  before_script:
#    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
#    - 'which sshpass || ( apt-get update -y -qq && apt-get install sshpass -y -qq)'
#    - eval $(ssh-agent -s)
#    - mkdir -p ~/.ssh
#    - ssh-add <(echo "$SSH_PRIVATE_KEY")
#    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
#  script:
#    - sshpass -V
#    - export SSHPASS=$SSH_PASS
#    - sshpass -e ssh -p22 $USERNAME@$HOST "netstat -tplan | grep :9200 || (sysctl -w vm.max_map_count=262144 && docker rm elassandra && docker run --name elassandra -p 127.0.0.1:9200:9200/tcp -d strapdata/elassandra:latest)"
#    - sshpass -e ssh -p22 $USERNAME@$HOST "docker pull $RELEASE_IMAGE"
#    - sshpass -e ssh -p22 $USERNAME@$HOST "docker run -it -p 3000:3000 $RELEASE_IMAGE"
#    - rm -f ~/.ssh/id_rsa
