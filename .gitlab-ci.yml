image: docker:19.03.8
services:
  - name: docker:19.03.8-dind
    alias: docker

stages:
  - build
  - test
  - release
  - deploy

variables:
  TEST_IMAGE: gitlab.scala-patrimoine.fr:5555/scala-api1/api:$CI_COMMIT_REF_NAME
  RELEASE_IMAGE: gitlab.scala-patrimoine.fr:5555/scala-api1/api:latest

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - .npm/

before_script:
  - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD gitlab.scala-patrimoine.fr:5555

build_docker:
  stage: build
  script:
    - docker build --pull -t $TEST_IMAGE .
    - docker push $TEST_IMAGE

test_docker:
  stage: test
  script:
    - docker pull $TEST_IMAGE
    - docker run $TEST_IMAGE npm install
    - docker run $TEST_IMAGE npm build
    - docker run $TEST_IMAGE npm test

release:
  stage: release
  script:
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $RELEASE_IMAGE
    - docker push $RELEASE_IMAGE
  only:
    - master

deploy_ssh:
  stage: deploy
  only:
    - master
  when: manual
  allow_failure: false
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y)'
    - mkdir -p ~/.ssh
    - echo “$SSH_PRIVATE_KEY” > ~/.ssh/id_rsa
    - chmod 700 ~/.ssh
    - chmod 600 ~/.ssh/id_rsa
    - eval $(ssh-agent -s)
    #- ssh-add ~/.ssh/id_rsa
  script:
    - ssh -i $SSH_PRIVATE_KEY $USERNAME@$HOST "netstat -tplan | grep :9200 || (sysctl -w vm.max_map_count=262144 && docker rm elassandra && docker run --name elassandra -p 127.0.0.1:9200:9200/tcp -d strapdata/elassandra:latest)"
    - ssh -i $SSH_PRIVATE_KEY $USERNAME@$HOST "docker pull $RELEASE_IMAGE"
    - ssh -i $SSH_PRIVATE_KEY $USERNAME@$HOST "docker run -it -p 3000:3000 $RELEASE_IMAGE"
    - rm -f ~/.ssh/id_rsa